   1               		.file	"CUL.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.section	.text._crc8_ccitt_update,"ax",@progbits
   9               	_crc8_ccitt_update:
  10               	/* prologue: function */
  11               	/* frame size = 0 */
  12               	/* stack size = 0 */
  13               	.L__stack_usage = 0
  14               	/* #APP */
  15               	 ;  389 "/usr/lib/avr/include/util/crc16.h" 1
  16 0000 8627      		    eor    r24, r22
  17 0002 98E0      		    ldi    r25, 8
  18 0004 67E0      		    ldi    r22, 0x07
  19 0006 880F      		1:  lsl    r24
  20 0008 00F4      		    brcc   2f
  21 000a 8627      		    eor    r24, r22
  22 000c 9A95      		2:  dec    r25
  23 000e 01F4      		    brne   1b
  24               		
  25               	 ;  0 "" 2
  26               	/* #NOAPP */
  27 0010 0895      		ret
  29               		.section	.text.ws2812_sendarray_mask,"ax",@progbits
  30               	.global	ws2812_sendarray_mask
  32               	ws2812_sendarray_mask:
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  37 0000 2AB1      		in r18,0xa
  38 0002 242B      		or r18,r20
  39 0004 2AB9      		out 0xa,r18
  40 0006 2BB1      		in r18,0xb
  41 0008 342F      		mov r19,r20
  42 000a 3095      		com r19
  43 000c 2323      		and r18,r19
  44 000e 3BB1      		in r19,0xb
  45 0010 432B      		or r20,r19
  46 0012 3FB7      		in r19,__SREG__
  47               	/* #APP */
  48               	 ;  114 "light_ws2812.c" 1
  49 0014 F894      		cli
  50               	 ;  0 "" 2
  51               	/* #NOAPP */
  52 0016 FC01      		movw r30,r24
  53 0018 680F      		add r22,r24
  54 001a 791F      		adc r23,r25
  55               	.L3:
  56 001c E617      		cp r30,r22
  57 001e F707      		cpc r31,r23
  58 0020 01F0      		breq .L6
  59 0022 8191      		ld r24,Z+
  60               	/* #APP */
  61               	 ;  119 "light_ws2812.c" 1
  62 0024 98E0      		       ldi   r25,8  
  63               		loop34:            
  64 0026 4BB9      		       out   11,r20 
  65 0028 0000      		nop      
  66 002a 00C0      		rjmp .+0 
  67 002c 87FF      		       sbrs  r24,7  
  68 002e 2BB9      		       out   11,r18 
  69 0030 880F      		       lsl   r24    
  70 0032 0000      		nop      
  71 0034 00C0      		rjmp .+0 
  72 0036 00C0      		rjmp .+0 
  73 0038 00C0      		rjmp .+0 
  74 003a 2BB9      		       out   11,r18 
  75 003c 00C0      		rjmp .+0 
  76 003e 00C0      		rjmp .+0 
  77 0040 00C0      		rjmp .+0 
  78 0042 00C0      		rjmp .+0 
  79 0044 00C0      		rjmp .+0 
  80 0046 00C0      		rjmp .+0 
  81 0048 00C0      		rjmp .+0 
  82 004a 00C0      		rjmp .+0 
  83 004c 9A95      		       dec   r25    
  84 004e 01F4      		       brne  loop34
  85               		
  86               	 ;  0 "" 2
  87               	/* #NOAPP */
  88 0050 00C0      		rjmp .L3
  89               	.L6:
  90 0052 3FBF      		out __SREG__,r19
  91 0054 0895      		ret
  93               		.section	.text.ws2812_setleds_pin,"ax",@progbits
  94               	.global	ws2812_setleds_pin
  96               	ws2812_setleds_pin:
  97               	/* prologue: function */
  98               	/* frame size = 0 */
  99               	/* stack size = 0 */
 100               	.L__stack_usage = 0
 101 0000 9B01      		movw r18,r22
 102 0002 220F      		lsl r18
 103 0004 331F      		rol r19
 104 0006 620F      		add r22,r18
 105 0008 731F      		adc r23,r19
 106 000a 0E94 0000 		call ws2812_sendarray_mask
 107 000e 8FEA      		ldi r24,lo8(1199)
 108 0010 94E0      		ldi r25,hi8(1199)
 109 0012 0197      	1:	sbiw r24,1
 110 0014 01F4      		brne 1b
 111 0016 00C0      		rjmp .
 112 0018 0000      		nop
 113 001a 0895      		ret
 115               		.section	.text.ws2812_setleds,"ax",@progbits
 116               	.global	ws2812_setleds
 118               	ws2812_setleds:
 119               	/* prologue: function */
 120               	/* frame size = 0 */
 121               	/* stack size = 0 */
 122               	.L__stack_usage = 0
 123 0000 40E2      		ldi r20,lo8(32)
 124 0002 0E94 0000 		call ws2812_setleds_pin
 125 0006 0895      		ret
 127               		.section	.text.ws2812_setleds_rgbw,"ax",@progbits
 128               	.global	ws2812_setleds_rgbw
 130               	ws2812_setleds_rgbw:
 131               	/* prologue: function */
 132               	/* frame size = 0 */
 133               	/* stack size = 0 */
 134               	.L__stack_usage = 0
 135 0000 660F      		lsl r22
 136 0002 771F      		rol r23
 137 0004 660F      		lsl r22
 138 0006 771F      		rol r23
 139 0008 40E2      		ldi r20,lo8(32)
 140 000a 0E94 0000 		call ws2812_sendarray_mask
 141 000e 8FEA      		ldi r24,lo8(1199)
 142 0010 94E0      		ldi r25,hi8(1199)
 143 0012 0197      	1:	sbiw r24,1
 144 0014 01F4      		brne 1b
 145 0016 00C0      		rjmp .
 146 0018 0000      		nop
 147 001a 0895      		ret
 149               		.section	.text.ws2812_sendarray,"ax",@progbits
 150               	.global	ws2812_sendarray
 152               	ws2812_sendarray:
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 0 */
 156               	.L__stack_usage = 0
 157 0000 40E2      		ldi r20,lo8(32)
 158 0002 0E94 0000 		call ws2812_sendarray_mask
 159 0006 0895      		ret
 161               		.section	.text.writebl,"ax",@progbits
 162               	.global	writebl
 164               	writebl:
 165               	/* prologue: function */
 166               	/* frame size = 0 */
 167               	/* stack size = 0 */
 168               	.L__stack_usage = 0
 169 0000 27E0      		ldi r18,lo8(7)
 170 0002 30E0      		ldi r19,0
 171 0004 90E0      		ldi r25,0
 172               	.L14:
 173 0006 5C98      		cbi 0xb,4
 174 0008 EFE8      		ldi r30,lo8(399)
 175 000a F1E0      		ldi r31,hi8(399)
 176 000c 3197      	1:	sbiw r30,1
 177 000e 01F4      		brne 1b
 178 0010 00C0      		rjmp .
 179 0012 0000      		nop
 180 0014 AC01      		movw r20,r24
 181 0016 022E      		mov r0,r18
 182 0018 00C0      		rjmp 2f
 183               		1:
 184 001a 5595      		asr r21
 185 001c 4795      		ror r20
 186               		2:
 187 001e 0A94      		dec r0
 188 0020 02F4      		brpl 1b
 189 0022 BA01      		movw r22,r20
 190 0024 6170      		andi r22,1
 191 0026 7727      		clr r23
 192 0028 40FD      		sbrc r20,0
 193 002a 00C0      		rjmp .L12
 194 002c EFE8      		ldi r30,lo8(399)
 195 002e F1E0      		ldi r31,hi8(399)
 196 0030 3197      	1:	sbiw r30,1
 197 0032 01F4      		brne 1b
 198 0034 00C0      		rjmp .
 199 0036 0000      		nop
 200               	.L12:
 201 0038 5C9A      		sbi 0xb,4
 202 003a EFE8      		ldi r30,lo8(399)
 203 003c F1E0      		ldi r31,hi8(399)
 204 003e 3197      	1:	sbiw r30,1
 205 0040 01F4      		brne 1b
 206 0042 00C0      		rjmp .
 207 0044 0000      		nop
 208 0046 672B      		or r22,r23
 209 0048 01F0      		breq .L13
 210 004a EFE8      		ldi r30,lo8(399)
 211 004c F1E0      		ldi r31,hi8(399)
 212 004e 3197      	1:	sbiw r30,1
 213 0050 01F4      		brne 1b
 214 0052 00C0      		rjmp .
 215 0054 0000      		nop
 216               	.L13:
 217 0056 2150      		subi r18,1
 218 0058 3109      		sbc r19,__zero_reg__
 219 005a 00F4      		brcc .L14
 220 005c 5C98      		cbi 0xb,4
 221 005e 8FE8      		ldi r24,lo8(399)
 222 0060 91E0      		ldi r25,hi8(399)
 223 0062 0197      	1:	sbiw r24,1
 224 0064 01F4      		brne 1b
 225 0066 00C0      		rjmp .
 226 0068 0000      		nop
 227 006a 5C9A      		sbi 0xb,4
 228 006c EFE8      		ldi r30,lo8(399)
 229 006e F1E0      		ldi r31,hi8(399)
 230 0070 3197      	1:	sbiw r30,1
 231 0072 01F4      		brne 1b
 232 0074 00C0      		rjmp .
 233 0076 0000      		nop
 234 0078 0895      		ret
 236               		.section	.text.initbl,"ax",@progbits
 237               	.global	initbl
 239               	initbl:
 240               	/* prologue: function */
 241               	/* frame size = 0 */
 242               	/* stack size = 0 */
 243               	.L__stack_usage = 0
 244 0000 5C98      		cbi 0xb,4
 245 0002 8FED      		ldi r24,lo8(11999)
 246 0004 9EE2      		ldi r25,hi8(11999)
 247 0006 0197      	1:	sbiw r24,1
 248 0008 01F4      		brne 1b
 249 000a 00C0      		rjmp .
 250 000c 0000      		nop
 251 000e 5C9A      		sbi 0xb,4
 252 0010 8FED      		ldi r24,lo8(479)
 253 0012 91E0      		ldi r25,hi8(479)
 254 0014 0197      	1:	sbiw r24,1
 255 0016 01F4      		brne 1b
 256 0018 00C0      		rjmp .
 257 001a 0000      		nop
 258 001c 5C98      		cbi 0xb,4
 259 001e 8FEC      		ldi r24,lo8(1999)
 260 0020 97E0      		ldi r25,hi8(1999)
 261 0022 0197      	1:	sbiw r24,1
 262 0024 01F4      		brne 1b
 263 0026 00C0      		rjmp .
 264 0028 0000      		nop
 265 002a 5C9A      		sbi 0xb,4
 266 002c 9AE1      		ldi r25,lo8(26)
 267 002e 9A95      	1:	dec r25
 268 0030 01F4      		brne 1b
 269 0032 00C0      		rjmp .
 270 0034 0895      		ret
 272               		.section	.text.write,"ax",@progbits
 273               	.global	write
 275               	write:
 276               	/* prologue: function */
 277               	/* frame size = 0 */
 278               	/* stack size = 0 */
 279               	.L__stack_usage = 0
 280 0000 AC01      		movw r20,r24
 281 0002 5C98      		cbi 0xb,4
 282 0004 E1E0      		ldi r30,lo8(1)
 283 0006 F0E0      		ldi r31,0
 284               	.L22:
 285 0008 2A98      		cbi 0x5,2
 286 000a 95B1      		in r25,0x5
 287 000c 8FEF      		ldi r24,lo8(-1)
 288 000e 860F      		add r24,r22
 289 0010 9F01      		movw r18,r30
 290 0012 00C0      		rjmp 2f
 291               		1:
 292 0014 220F      		lsl r18
 293 0016 331F      		rol r19
 294               		2:
 295 0018 8A95      		dec r24
 296 001a 02F4      		brpl 1b
 297 001c 2423      		and r18,r20
 298 001e 3523      		and r19,r21
 299 0020 232B      		or r18,r19
 300 0022 01F4      		brne .L23
 301 0024 20E0      		ldi r18,0
 302 0026 00C0      		rjmp .L21
 303               	.L23:
 304 0028 24E0      		ldi r18,lo8(4)
 305               	.L21:
 306 002a 922B      		or r25,r18
 307 002c 95B9      		out 0x5,r25
 308 002e 2998      		cbi 0x5,1
 309 0030 8FE8      		ldi r24,lo8(399)
 310 0032 91E0      		ldi r25,hi8(399)
 311 0034 0197      	1:	sbiw r24,1
 312 0036 01F4      		brne 1b
 313 0038 00C0      		rjmp .
 314 003a 0000      		nop
 315 003c 299A      		sbi 0x5,1
 316 003e 8FE8      		ldi r24,lo8(399)
 317 0040 91E0      		ldi r25,hi8(399)
 318 0042 0197      	1:	sbiw r24,1
 319 0044 01F4      		brne 1b
 320 0046 00C0      		rjmp .
 321 0048 0000      		nop
 322 004a 6150      		subi r22,lo8(-(-1))
 323 004c 01F4      		brne .L22
 324 004e 2A98      		cbi 0x5,2
 325 0050 5C9A      		sbi 0xb,4
 326 0052 0895      		ret
 328               		.section	.text.setup_lcd,"ax",@progbits
 329               	.global	setup_lcd
 331               	setup_lcd:
 332 0000 CF93      		push r28
 333 0002 DF93      		push r29
 334               	/* prologue: function */
 335               	/* frame size = 0 */
 336               	/* stack size = 2 */
 337               	.L__stack_usage = 2
 338 0004 C0E0      		ldi r28,lo8(commands)
 339 0006 D0E0      		ldi r29,hi8(commands)
 340               	.L26:
 341 0008 60E1      		ldi r22,lo8(16)
 342 000a 8991      		ld r24,Y+
 343 000c 9991      		ld r25,Y+
 344 000e 0E94 0000 		call write
 345 0012 20E0      		ldi r18,hi8(commands+22)
 346 0014 C030      		cpi r28,lo8(commands+22)
 347 0016 D207      		cpc r29,r18
 348 0018 01F4      		brne .L26
 349 001a C0E0      		ldi r28,lo8(commands2)
 350 001c D0E0      		ldi r29,hi8(commands2)
 351               	.L27:
 352 001e 80E0      		ldi r24,hi8(commands2+136)
 353 0020 C030      		cpi r28,lo8(commands2+136)
 354 0022 D807      		cpc r29,r24
 355 0024 01F0      		breq .L32
 356 0026 8991      		ld r24,Y+
 357 0028 9991      		ld r25,Y+
 358 002a 0097      		sbiw r24,0
 359 002c 01F4      		brne .L28
 360 002e 8FEF      		ldi r24,lo8(383999)
 361 0030 9BED      		ldi r25,hi8(383999)
 362 0032 25E0      		ldi r18,hlo8(383999)
 363 0034 8150      	1:	subi r24,1
 364 0036 9040      		sbci r25,0
 365 0038 2040      		sbci r18,0
 366 003a 01F4      		brne 1b
 367 003c 00C0      		rjmp .
 368 003e 0000      		nop
 369 0040 00C0      		rjmp .L27
 370               	.L28:
 371 0042 69E0      		ldi r22,lo8(9)
 372 0044 0E94 0000 		call write
 373 0048 00C0      		rjmp .L27
 374               	.L32:
 375               	/* epilogue start */
 376 004a DF91      		pop r29
 377 004c CF91      		pop r28
 378 004e 0895      		ret
 380               		.section	.text.readAna,"ax",@progbits
 381               	.global	readAna
 383               	readAna:
 384               	/* prologue: function */
 385               	/* frame size = 0 */
 386               	/* stack size = 0 */
 387               	.L__stack_usage = 0
 388 0000 9091 7A00 		lds r25,122
 389 0004 9760      		ori r25,lo8(7)
 390 0006 9093 7A00 		sts 122,r25
 391 000a 90E4      		ldi r25,lo8(64)
 392 000c 9093 7B00 		sts 123,r25
 393 0010 9093 7C00 		sts 124,r25
 394 0014 8830      		cpi r24,lo8(8)
 395 0016 00F0      		brlo .L34
 396 0018 8850      		subi r24,lo8(-(-8))
 397 001a 9091 7B00 		lds r25,123
 398 001e 9062      		ori r25,lo8(32)
 399 0020 00C0      		rjmp .L38
 400               	.L34:
 401 0022 9091 7B00 		lds r25,123
 402 0026 9F7D      		andi r25,lo8(-33)
 403               	.L38:
 404 0028 9093 7B00 		sts 123,r25
 405 002c 9091 7C00 		lds r25,124
 406 0030 8770      		andi r24,lo8(7)
 407 0032 892B      		or r24,r25
 408 0034 8093 7C00 		sts 124,r24
 409 0038 8091 7A00 		lds r24,122
 410 003c 8068      		ori r24,lo8(-128)
 411 003e 8093 7A00 		sts 122,r24
 412 0042 8FE3      		ldi r24,lo8(7999)
 413 0044 9FE1      		ldi r25,hi8(7999)
 414 0046 0197      	1:	sbiw r24,1
 415 0048 01F4      		brne 1b
 416 004a 00C0      		rjmp .
 417 004c 0000      		nop
 418 004e 8091 7A00 		lds r24,122
 419 0052 8064      		ori r24,lo8(64)
 420 0054 8093 7A00 		sts 122,r24
 421               	.L36:
 422 0058 8091 7A00 		lds r24,122
 423 005c 86FD      		sbrc r24,6
 424 005e 00C0      		rjmp .L36
 425 0060 8091 7800 		lds r24,120
 426 0064 2091 7900 		lds r18,121
 427 0068 90E0      		ldi r25,0
 428 006a 922B      		or r25,r18
 429 006c 0895      		ret
 431               		.section	.text.readVcc,"ax",@progbits
 432               	.global	readVcc
 434               	readVcc:
 435               	/* prologue: function */
 436               	/* frame size = 0 */
 437               	/* stack size = 0 */
 438               	.L__stack_usage = 0
 439 0000 8EE5      		ldi r24,lo8(94)
 440 0002 8093 7C00 		sts 124,r24
 441 0006 8091 7A00 		lds r24,122
 442 000a 8068      		ori r24,lo8(-128)
 443 000c 8093 7A00 		sts 122,r24
 444 0010 8091 7B00 		lds r24,123
 445 0014 8F7D      		andi r24,lo8(-33)
 446 0016 8093 7B00 		sts 123,r24
 447 001a 8FE3      		ldi r24,lo8(7999)
 448 001c 9FE1      		ldi r25,hi8(7999)
 449 001e 0197      	1:	sbiw r24,1
 450 0020 01F4      		brne 1b
 451 0022 00C0      		rjmp .
 452 0024 0000      		nop
 453 0026 8091 7A00 		lds r24,122
 454 002a 8064      		ori r24,lo8(64)
 455 002c 8093 7A00 		sts 122,r24
 456               	.L40:
 457 0030 8091 7A00 		lds r24,122
 458 0034 86FD      		sbrc r24,6
 459 0036 00C0      		rjmp .L40
 460 0038 8091 7A00 		lds r24,122
 461 003c 8064      		ori r24,lo8(64)
 462 003e 8093 7A00 		sts 122,r24
 463               	.L41:
 464 0042 8091 7A00 		lds r24,122
 465 0046 86FD      		sbrc r24,6
 466 0048 00C0      		rjmp .L41
 467 004a 2091 7800 		lds r18,120
 468 004e 8091 7900 		lds r24,121
 469 0052 30E0      		ldi r19,0
 470 0054 382B      		or r19,r24
 471 0056 032E      		mov __tmp_reg__,r19
 472 0058 000C      		lsl r0
 473 005a 440B      		sbc r20,r20
 474 005c 550B      		sbc r21,r21
 475 005e 64EB      		ldi r22,lo8(-76)
 476 0060 7BE2      		ldi r23,lo8(43)
 477 0062 81E1      		ldi r24,lo8(17)
 478 0064 90E0      		ldi r25,0
 479 0066 0E94 0000 		call __divmodsi4
 480 006a C901      		movw r24,r18
 481 006c 0895      		ret
 483               		.section	.text.GetTemp,"ax",@progbits
 484               	.global	GetTemp
 486               	GetTemp:
 487               	/* prologue: function */
 488               	/* frame size = 0 */
 489               	/* stack size = 0 */
 490               	.L__stack_usage = 0
 491 0000 87EC      		ldi r24,lo8(-57)
 492 0002 8093 7C00 		sts 124,r24
 493 0006 80E2      		ldi r24,lo8(32)
 494 0008 8093 7B00 		sts 123,r24
 495 000c 8091 7A00 		lds r24,122
 496 0010 877D      		andi r24,lo8(-41)
 497 0012 8093 7A00 		sts 122,r24
 498 0016 8091 7A00 		lds r24,122
 499 001a 8068      		ori r24,lo8(-128)
 500 001c 8093 7A00 		sts 122,r24
 501 0020 8FE3      		ldi r24,lo8(7999)
 502 0022 9FE1      		ldi r25,hi8(7999)
 503 0024 0197      	1:	sbiw r24,1
 504 0026 01F4      		brne 1b
 505 0028 00C0      		rjmp .
 506 002a 0000      		nop
 507 002c 8091 7A00 		lds r24,122
 508 0030 8064      		ori r24,lo8(64)
 509 0032 8093 7A00 		sts 122,r24
 510               	.L45:
 511 0036 8091 7A00 		lds r24,122
 512 003a 86FD      		sbrc r24,6
 513 003c 00C0      		rjmp .L45
 514 003e 8091 7A00 		lds r24,122
 515 0042 8064      		ori r24,lo8(64)
 516 0044 8093 7A00 		sts 122,r24
 517               	.L46:
 518 0048 8091 7A00 		lds r24,122
 519 004c 86FD      		sbrc r24,6
 520 004e 00C0      		rjmp .L46
 521 0050 8091 7800 		lds r24,120
 522 0054 2091 7900 		lds r18,121
 523 0058 90E0      		ldi r25,0
 524 005a 922B      		or r25,r18
 525 005c 0895      		ret
 527               		.section	.text.freeRam,"ax",@progbits
 528               	.global	freeRam
 530               	freeRam:
 531 0000 A2E0      		ldi r26,lo8(2)
 532 0002 B0E0      		ldi r27,0
 533 0004 E0E0      		ldi r30,lo8(gs(1f))
 534 0006 F0E0      		ldi r31,hi8(gs(1f))
 535 0008 0C94 0000 		jmp __prologue_saves__+((18 - 2) * 2)
 536               	1:
 537               	/* prologue: function */
 538               	/* frame size = 2 */
 539               	/* stack size = 4 */
 540               	.L__stack_usage = 4
 541 000c 2091 0000 		lds r18,__brkval
 542 0010 3091 0000 		lds r19,__brkval+1
 543 0014 2115      		cp r18,__zero_reg__
 544 0016 3105      		cpc r19,__zero_reg__
 545 0018 01F4      		brne .L50
 546 001a 20E0      		ldi r18,lo8(__heap_start)
 547 001c 30E0      		ldi r19,hi8(__heap_start)
 548               	.L50:
 549 001e CE01      		movw r24,r28
 550 0020 0196      		adiw r24,1
 551 0022 821B      		sub r24,r18
 552 0024 930B      		sbc r25,r19
 553               	/* epilogue start */
 554 0026 2296      		adiw r28,2
 555 0028 E2E0      		ldi r30, lo8(2)
 556 002a 0C94 0000 		jmp __epilogue_restores__ + ((18 - 2) * 2)
 558               		.section	.text.I2C_init,"ax",@progbits
 559               	.global	I2C_init
 561               	I2C_init:
 562               	/* prologue: function */
 563               	/* frame size = 0 */
 564               	/* stack size = 0 */
 565               	.L__stack_usage = 0
 566               	/* #APP */
 567               	 ;  307 "CUL.c" 1
 568 0000 F894      		cli
 569               	 ;  0 "" 2
 570               	/* #NOAPP */
 571 0002 880F      		lsl r24
 572 0004 8093 BA00 		sts 186,r24
 573 0008 85EC      		ldi r24,lo8(-59)
 574 000a 8093 BC00 		sts 188,r24
 575 000e 8FEF      		ldi r24,lo8(-1)
 576 0010 8093 0000 		sts buffer_address,r24
 577 0014 8093 0000 		sts count,r24
 578 0018 0895      		ret
 580               		.section	.text.__vector_9,"ax",@progbits
 581               	.global	__vector_9
 583               	__vector_9:
 584 0000 1F92      		push r1
 585 0002 0F92      		push r0
 586 0004 0FB6      		in r0,__SREG__
 587 0006 0F92      		push r0
 588 0008 1124      		clr __zero_reg__
 589 000a 8F93      		push r24
 590 000c 9F93      		push r25
 591               	/* prologue: Signal */
 592               	/* frame size = 0 */
 593               	/* stack size = 5 */
 594               	.L__stack_usage = 5
 595 000e 1899      		sbic 0x3,0
 596 0010 00C0      		rjmp .L53
 597 0012 8091 0000 		lds r24,fanspin
 598 0016 9091 0000 		lds r25,fanspin+1
 599 001a 0196      		adiw r24,1
 600 001c 9093 0000 		sts fanspin+1,r25
 601 0020 8093 0000 		sts fanspin,r24
 602               	.L53:
 603               	/* epilogue start */
 604 0024 9F91      		pop r25
 605 0026 8F91      		pop r24
 606 0028 0F90      		pop r0
 607 002a 0FBE      		out __SREG__,r0
 608 002c 0F90      		pop r0
 609 002e 1F90      		pop r1
 610 0030 1895      		reti
 612               		.section	.text.__vector_36,"ax",@progbits
 613               	.global	__vector_36
 615               	__vector_36:
 616 0000 1F92      		push r1
 617 0002 0F92      		push r0
 618 0004 0FB6      		in r0,__SREG__
 619 0006 0F92      		push r0
 620 0008 1124      		clr __zero_reg__
 621 000a 2F93      		push r18
 622 000c 3F93      		push r19
 623 000e 4F93      		push r20
 624 0010 5F93      		push r21
 625 0012 6F93      		push r22
 626 0014 7F93      		push r23
 627 0016 8F93      		push r24
 628 0018 9F93      		push r25
 629 001a AF93      		push r26
 630 001c BF93      		push r27
 631 001e EF93      		push r30
 632 0020 FF93      		push r31
 633               	/* prologue: Signal */
 634               	/* frame size = 0 */
 635               	/* stack size = 15 */
 636               	.L__stack_usage = 15
 637 0022 8091 B900 		lds r24,185
 638 0026 887F      		andi r24,lo8(-8)
 639 0028 8038      		cpi r24,lo8(-128)
 640 002a 01F0      		breq .L57
 641 002c 00F4      		brsh .L58
 642 002e 8823      		tst r24
 643 0030 01F4      		brne .+2
 644 0032 00C0      		rjmp .L59
 645 0034 8036      		cpi r24,lo8(96)
 646 0036 01F0      		breq .+2
 647 0038 00C0      		rjmp .L56
 648 003a 85EC      		ldi r24,lo8(-59)
 649 003c 8093 BC00 		sts 188,r24
 650 0040 8FEF      		ldi r24,lo8(-1)
 651 0042 8093 0000 		sts buffer_address,r24
 652 0046 00C0      		rjmp .L55
 653               	.L58:
 654 0048 883A      		cpi r24,lo8(-88)
 655 004a 01F4      		brne .+2
 656 004c 00C0      		rjmp .L61
 657 004e 883B      		cpi r24,lo8(-72)
 658 0050 01F4      		brne .+2
 659 0052 00C0      		rjmp .L61
 660 0054 00C0      		rjmp .L56
 661               	.L57:
 662 0056 8091 0000 		lds r24,buffer_address
 663 005a 8F3F      		cpi r24,lo8(-1)
 664 005c 01F0      		breq .+2
 665 005e 00C0      		rjmp .L63
 666 0060 6091 BB00 		lds r22,187
 667 0064 6093 0000 		sts commandbyte,r22
 668 0068 80E0      		ldi r24,0
 669 006a 0E94 0000 		call _crc8_ccitt_update
 670 006e 8093 0000 		sts crc,r24
 671 0072 1092 0000 		sts buffer_address,__zero_reg__
 672 0076 1092 0000 		sts i2cerror,__zero_reg__
 673 007a E091 0000 		lds r30,commandbyte
 674 007e 8E2F      		mov r24,r30
 675 0080 90E0      		ldi r25,0
 676 0082 8531      		cpi r24,21
 677 0084 9105      		cpc r25,__zero_reg__
 678 0086 00F0      		brlo .+2
 679 0088 00C0      		rjmp .L64
 680 008a FC01      		movw r30,r24
 681 008c E050      		subi r30,lo8(-(gs(.L66)))
 682 008e F040      		sbci r31,hi8(-(gs(.L66)))
 683 0090 0C94 0000 		jmp __tablejump2__
 684               		.section	.progmem.gcc_sw_table.__vector_36,"a",@progbits
 685               		.p2align	1
 686               	.L66:
 687 0000 0000      		.word gs(.L65)
 688 0002 0000      		.word gs(.L67)
 689 0004 0000      		.word gs(.L68)
 690 0006 0000      		.word gs(.L69)
 691 0008 0000      		.word gs(.L70)
 692 000a 0000      		.word gs(.L71)
 693 000c 0000      		.word gs(.L72)
 694 000e 0000      		.word gs(.L64)
 695 0010 0000      		.word gs(.L73)
 696 0012 0000      		.word gs(.L74)
 697 0014 0000      		.word gs(.L75)
 698 0016 0000      		.word gs(.L76)
 699 0018 0000      		.word gs(.L64)
 700 001a 0000      		.word gs(.L64)
 701 001c 0000      		.word gs(.L64)
 702 001e 0000      		.word gs(.L64)
 703 0020 0000      		.word gs(.L64)
 704 0022 0000      		.word gs(.L64)
 705 0024 0000      		.word gs(.L64)
 706 0026 0000      		.word gs(.L64)
 707 0028 0000      		.word gs(.L77)
 708               		.section	.text.__vector_36
 709               	.L65:
 710 0094 8091 0000 		lds r24,a0
 711 0098 9091 0000 		lds r25,a0+1
 712 009c 00C0      		rjmp .L181
 713               	.L67:
 714 009e 8091 0000 		lds r24,a1
 715 00a2 9091 0000 		lds r25,a1+1
 716 00a6 00C0      		rjmp .L181
 717               	.L68:
 718 00a8 8091 0000 		lds r24,a2
 719 00ac 9091 0000 		lds r25,a2+1
 720 00b0 00C0      		rjmp .L181
 721               	.L69:
 722 00b2 8091 0000 		lds r24,a3
 723 00b6 9091 0000 		lds r25,a3+1
 724 00ba 00C0      		rjmp .L181
 725               	.L70:
 726 00bc 8091 0000 		lds r24,a4
 727 00c0 9091 0000 		lds r25,a4+1
 728 00c4 00C0      		rjmp .L181
 729               	.L71:
 730 00c6 8091 0000 		lds r24,a5
 731 00ca 9091 0000 		lds r25,a5+1
 732 00ce 00C0      		rjmp .L181
 733               	.L72:
 734 00d0 8091 0000 		lds r24,a7
 735 00d4 9091 0000 		lds r25,a7+1
 736 00d8 00C0      		rjmp .L181
 737               	.L73:
 738 00da 8091 0000 		lds r24,rpm
 739 00de 9091 0000 		lds r25,rpm+1
 740 00e2 00C0      		rjmp .L181
 741               	.L74:
 742 00e4 8091 0000 		lds r24,vcc
 743 00e8 9091 0000 		lds r25,vcc+1
 744 00ec 00C0      		rjmp .L181
 745               	.L75:
 746 00ee 8091 0000 		lds r24,temp
 747 00f2 9091 0000 		lds r25,temp+1
 748 00f6 00C0      		rjmp .L181
 749               	.L76:
 750 00f8 0E94 0000 		call freeRam
 751 00fc 00C0      		rjmp .L181
 752               	.L77:
 753 00fe 8091 0000 		lds r24,a7avg
 754 0102 9091 0000 		lds r25,a7avg+1
 755               	.L181:
 756 0106 9093 0000 		sts i2cbuffer+1,r25
 757 010a 8093 0000 		sts i2cbuffer,r24
 758 010e 00C0      		rjmp .L64
 759               	.L63:
 760 0110 8111      		cpse r24,__zero_reg__
 761 0112 00C0      		rjmp .L78
 762 0114 8091 BB00 		lds r24,187
 763 0118 8093 0000 		sts twdrbuffer,r24
 764 011c 6091 BB00 		lds r22,187
 765 0120 8091 0000 		lds r24,crc
 766 0124 0E94 0000 		call _crc8_ccitt_update
 767 0128 8093 0000 		sts crc,r24
 768 012c 00C0      		rjmp .L79
 769               	.L78:
 770 012e 9091 BB00 		lds r25,187
 771 0132 2091 0000 		lds r18,crc
 772 0136 2913      		cpse r18,r25
 773 0138 00C0      		rjmp .L80
 774 013a 8130      		cpi r24,lo8(1)
 775 013c 01F0      		breq .+2
 776 013e 00C0      		rjmp .L80
 777 0140 8091 0000 		lds r24,commandbyte
 778 0144 8738      		cpi r24,lo8(-121)
 779 0146 01F4      		brne .L83
 780 0148 8091 0000 		lds r24,twdrbuffer
 781 014c 8093 0000 		sts newbllevel,r24
 782 0150 00C0      		rjmp .L79
 783               	.L83:
 784 0152 8D38      		cpi r24,lo8(-115)
 785 0154 01F4      		brne .L84
 786 0156 8091 0000 		lds r24,twdrbuffer
 787 015a 8F3F      		cpi r24,lo8(-1)
 788 015c 01F4      		brne .L85
 789 015e 469A      		sbi 0x8,6
 790 0160 00C0      		rjmp .L79
 791               	.L85:
 792 0162 4698      		cbi 0x8,6
 793 0164 00C0      		rjmp .L79
 794               	.L84:
 795 0166 8E38      		cpi r24,lo8(-114)
 796 0168 01F4      		brne .L86
 797 016a 8091 0000 		lds r24,twdrbuffer
 798 016e 8F3F      		cpi r24,lo8(-1)
 799 0170 01F4      		brne .L87
 800 0172 2C9A      		sbi 0x5,4
 801 0174 00C0      		rjmp .L79
 802               	.L87:
 803 0176 2C98      		cbi 0x5,4
 804 0178 00C0      		rjmp .L79
 805               	.L86:
 806 017a 8F38      		cpi r24,lo8(-113)
 807 017c 01F4      		brne .L88
 808 017e 8091 0000 		lds r24,twdrbuffer
 809 0182 8F3F      		cpi r24,lo8(-1)
 810 0184 01F4      		brne .L89
 811 0186 2E9A      		sbi 0x5,6
 812 0188 00C0      		rjmp .L79
 813               	.L89:
 814 018a 2E98      		cbi 0x5,6
 815 018c 00C0      		rjmp .L79
 816               	.L88:
 817 018e 8039      		cpi r24,lo8(-112)
 818 0190 01F4      		brne .L90
 819 0192 8091 0000 		lds r24,twdrbuffer
 820 0196 8F3F      		cpi r24,lo8(-1)
 821 0198 01F4      		brne .L91
 822 019a 479A      		sbi 0x8,7
 823 019c 00C0      		rjmp .L79
 824               	.L91:
 825 019e 4798      		cbi 0x8,7
 826 01a0 00C0      		rjmp .L79
 827               	.L90:
 828 01a2 8139      		cpi r24,lo8(-111)
 829 01a4 01F4      		brne .L92
 830 01a6 8091 0000 		lds r24,twdrbuffer
 831 01aa 8F3F      		cpi r24,lo8(-1)
 832 01ac 01F4      		brne .L93
 833 01ae 729A      		sbi 0xe,2
 834 01b0 00C0      		rjmp .L79
 835               	.L93:
 836 01b2 7298      		cbi 0xe,2
 837 01b4 00C0      		rjmp .L79
 838               	.L92:
 839 01b6 8239      		cpi r24,lo8(-110)
 840 01b8 01F4      		brne .L94
 841 01ba 8091 0000 		lds r24,twdrbuffer
 842 01be 8F3F      		cpi r24,lo8(-1)
 843 01c0 01F4      		brne .L95
 844 01c2 2D9A      		sbi 0x5,5
 845 01c4 00C0      		rjmp .L79
 846               	.L95:
 847 01c6 8130      		cpi r24,lo8(1)
 848 01c8 01F4      		brne .L96
 849 01ca 2D9A      		sbi 0x5,5
 850 01cc 82E0      		ldi r24,lo8(2)
 851 01ce 8093 0000 		sts twdrbuffer,r24
 852 01d2 00C0      		rjmp .L79
 853               	.L96:
 854 01d4 2D98      		cbi 0x5,5
 855 01d6 1092 0000 		sts twdrbuffer,__zero_reg__
 856 01da 00C0      		rjmp .L79
 857               	.L94:
 858 01dc 8339      		cpi r24,lo8(-109)
 859 01de 01F4      		brne .L97
 860 01e0 8091 0000 		lds r24,twdrbuffer
 861 01e4 87BD      		out 0x27,r24
 862 01e6 8091 0000 		lds r24,twdrbuffer
 863 01ea 8093 0000 		sts fanlevel,r24
 864 01ee 00C0      		rjmp .L79
 865               	.L97:
 866 01f0 8439      		cpi r24,lo8(-108)
 867 01f2 01F4      		brne .L98
 868 01f4 8091 0000 		lds r24,twdrbuffer
 869 01f8 8093 0000 		sts led+1,r24
 870 01fc 00C0      		rjmp .L180
 871               	.L98:
 872 01fe 8539      		cpi r24,lo8(-107)
 873 0200 01F4      		brne .L99
 874 0202 8091 0000 		lds r24,twdrbuffer
 875 0206 8093 0000 		sts led,r24
 876 020a 00C0      		rjmp .L180
 877               	.L99:
 878 020c 8639      		cpi r24,lo8(-106)
 879 020e 01F4      		brne .L80
 880 0210 8091 0000 		lds r24,twdrbuffer
 881 0214 8093 0000 		sts led+2,r24
 882               	.L180:
 883 0218 81E0      		ldi r24,lo8(1)
 884 021a 8093 0000 		sts changeled,r24
 885 021e 00C0      		rjmp .L79
 886               	.L80:
 887 0220 8091 0000 		lds r24,i2cerror
 888 0224 8F5F      		subi r24,lo8(-(1))
 889 0226 8093 0000 		sts i2cerror,r24
 890               	.L79:
 891 022a 8091 0000 		lds r24,buffer_address
 892 022e 8F5F      		subi r24,lo8(-(1))
 893 0230 8093 0000 		sts buffer_address,r24
 894               	.L64:
 895 0234 85EC      		ldi r24,lo8(-59)
 896 0236 8093 BC00 		sts 188,r24
 897 023a 8091 0000 		lds r24,commandbyte
 898 023e 8239      		cpi r24,lo8(-110)
 899 0240 01F0      		breq .+2
 900 0242 00C0      		rjmp .L55
 901 0244 8091 0000 		lds r24,twdrbuffer
 902 0248 8230      		cpi r24,lo8(2)
 903 024a 01F0      		breq .+2
 904 024c 00C0      		rjmp .L55
 905 024e 85E8      		ldi r24,lo8(-123)
 906 0250 8A95      	1:	dec r24
 907 0252 01F4      		brne 1b
 908 0254 0000      		nop
 909 0256 2D98      		cbi 0x5,5
 910 0258 00C0      		rjmp .L55
 911               	.L61:
 912 025a 00C0      		rjmp .
 913 025c 00C0      		rjmp .
 914 025e 0000      		nop
 915 0260 8091 0000 		lds r24,commandbyte
 916 0264 8F30      		cpi r24,lo8(15)
 917 0266 01F4      		brne .+2
 918 0268 00C0      		rjmp .L103
 919 026a 00F4      		brsh .L104
 920 026c 9091 0000 		lds r25,buffer_address
 921 0270 8C30      		cpi r24,lo8(12)
 922 0272 00F4      		brsh .L105
 923 0274 8830      		cpi r24,lo8(8)
 924 0276 00F4      		brsh .L106
 925 0278 8730      		cpi r24,lo8(7)
 926 027a 00F0      		brlo .+2
 927 027c 00C0      		rjmp .L177
 928 027e 00C0      		rjmp .L106
 929               	.L105:
 930 0280 8D30      		cpi r24,lo8(13)
 931 0282 01F4      		brne .+2
 932 0284 00C0      		rjmp .L108
 933 0286 00F0      		brlo .L178
 934 0288 00C0      		rjmp .L195
 935               	.L104:
 936 028a 8331      		cpi r24,lo8(19)
 937 028c 01F4      		brne .+2
 938 028e 00C0      		rjmp .L111
 939 0290 00F4      		brsh .L112
 940 0292 9091 0000 		lds r25,buffer_address
 941 0296 8131      		cpi r24,lo8(17)
 942 0298 01F4      		brne .+2
 943 029a 00C0      		rjmp .L113
 944 029c 00F4      		brsh .+2
 945 029e 00C0      		rjmp .L179
 946 02a0 00C0      		rjmp .L196
 947               	.L112:
 948 02a2 8738      		cpi r24,lo8(-121)
 949 02a4 01F0      		breq .L116
 950 02a6 00F4      		brsh .L117
 951 02a8 8431      		cpi r24,lo8(20)
 952 02aa 01F0      		breq .L106
 953 02ac 00C0      		rjmp .L102
 954               	.L117:
 955 02ae 8D58      		subi r24,lo8(-(115))
 956 02b0 8A30      		cpi r24,lo8(10)
 957 02b2 00F0      		brlo .+2
 958 02b4 00C0      		rjmp .L102
 959               	.L116:
 960 02b6 8091 0000 		lds r24,crc
 961 02ba 8093 BB00 		sts 187,r24
 962 02be 8FEF      		ldi r24,lo8(-1)
 963 02c0 00C0      		rjmp .L185
 964               	.L106:
 965 02c2 8091 0000 		lds r24,buffer_address
 966 02c6 8111      		cpse r24,__zero_reg__
 967 02c8 00C0      		rjmp .L119
 968 02ca 8091 0000 		lds r24,i2cbuffer
 969 02ce 00C0      		rjmp .L183
 970               	.L119:
 971 02d0 8130      		cpi r24,lo8(1)
 972 02d2 01F4      		brne .L120
 973 02d4 8091 0000 		lds r24,i2cbuffer+1
 974 02d8 00C0      		rjmp .L183
 975               	.L120:
 976 02da 8230      		cpi r24,lo8(2)
 977 02dc 01F0      		breq .+2
 978 02de 00C0      		rjmp .L153
 979 02e0 00C0      		rjmp .L188
 980               	.L178:
 981 02e2 9111      		cpse r25,__zero_reg__
 982 02e4 00C0      		rjmp .L122
 983 02e6 8091 0000 		lds r24,led+1
 984               	.L183:
 985 02ea 8093 BB00 		sts 187,r24
 986               	.L186:
 987 02ee 6091 BB00 		lds r22,187
 988 02f2 8091 0000 		lds r24,crc
 989 02f6 0E94 0000 		call _crc8_ccitt_update
 990               	.L185:
 991 02fa 8093 0000 		sts crc,r24
 992 02fe 00C0      		rjmp .L118
 993               	.L122:
 994 0300 9130      		cpi r25,lo8(1)
 995 0302 01F4      		brne .L123
 996 0304 8091 0000 		lds r24,led
 997 0308 00C0      		rjmp .L183
 998               	.L123:
 999 030a 9230      		cpi r25,lo8(2)
 1000 030c 01F4      		brne .L124
 1001 030e 8091 0000 		lds r24,led+2
 1002 0312 00C0      		rjmp .L183
 1003               	.L124:
 1004 0314 9330      		cpi r25,lo8(3)
 1005 0316 01F0      		breq .+2
 1006 0318 00C0      		rjmp .L153
 1007 031a 00C0      		rjmp .L188
 1008               	.L177:
 1009 031c 9111      		cpse r25,__zero_reg__
 1010 031e 00C0      		rjmp .L148
 1011 0320 8091 0000 		lds r24,bllevel
 1012 0324 00C0      		rjmp .L183
 1013               	.L108:
 1014 0326 9111      		cpse r25,__zero_reg__
 1015 0328 00C0      		rjmp .L148
 1016 032a 369B      		sbis 0x6,6
 1017 032c 00C0      		rjmp .L149
 1018 032e 00C0      		rjmp .L194
 1019               	.L195:
 1020 0330 9111      		cpse r25,__zero_reg__
 1021 0332 00C0      		rjmp .L148
 1022 0334 1C9B      		sbis 0x3,4
 1023 0336 00C0      		rjmp .L149
 1024 0338 00C0      		rjmp .L194
 1025               	.L103:
 1026 033a 8091 0000 		lds r24,buffer_address
 1027 033e 8111      		cpse r24,__zero_reg__
 1028 0340 00C0      		rjmp .L152
 1029 0342 1E9B      		sbis 0x3,6
 1030 0344 00C0      		rjmp .L149
 1031 0346 00C0      		rjmp .L194
 1032               	.L179:
 1033 0348 9111      		cpse r25,__zero_reg__
 1034 034a 00C0      		rjmp .L148
 1035 034c 379B      		sbis 0x6,7
 1036 034e 00C0      		rjmp .L149
 1037 0350 00C0      		rjmp .L194
 1038               	.L113:
 1039 0352 9111      		cpse r25,__zero_reg__
 1040 0354 00C0      		rjmp .L144
 1041 0356 629B      		sbis 0xc,2
 1042 0358 00C0      		rjmp .L149
 1043 035a 00C0      		rjmp .L194
 1044               	.L144:
 1045 035c 9130      		cpi r25,lo8(1)
 1046 035e 01F0      		breq .L188
 1047 0360 8FEF      		ldi r24,lo8(-1)
 1048 0362 8093 BB00 		sts 187,r24
 1049 0366 8EEF      		ldi r24,lo8(-2)
 1050 0368 8093 0000 		sts buffer_address,r24
 1051 036c 00C0      		rjmp .L184
 1052               	.L196:
 1053 036e 9111      		cpse r25,__zero_reg__
 1054 0370 00C0      		rjmp .L148
 1055 0372 1D9B      		sbis 0x3,5
 1056 0374 00C0      		rjmp .L149
 1057               	.L194:
 1058 0376 8FEF      		ldi r24,lo8(-1)
 1059 0378 00C0      		rjmp .L183
 1060               	.L149:
 1061 037a 1092 BB00 		sts 187,__zero_reg__
 1062 037e 00C0      		rjmp .L186
 1063               	.L148:
 1064 0380 9130      		cpi r25,lo8(1)
 1065 0382 01F4      		brne .L153
 1066 0384 00C0      		rjmp .L188
 1067               	.L111:
 1068 0386 8091 0000 		lds r24,buffer_address
 1069 038a 8111      		cpse r24,__zero_reg__
 1070 038c 00C0      		rjmp .L152
 1071 038e 87B5      		in r24,0x27
 1072 0390 00C0      		rjmp .L183
 1073               	.L152:
 1074 0392 8130      		cpi r24,lo8(1)
 1075 0394 01F4      		brne .L153
 1076               	.L188:
 1077 0396 8091 0000 		lds r24,crc
 1078 039a 00C0      		rjmp .L182
 1079               	.L153:
 1080 039c 8FEF      		ldi r24,lo8(-1)
 1081 039e 8093 BB00 		sts 187,r24
 1082               	.L184:
 1083 03a2 8091 0000 		lds r24,i2cerror
 1084 03a6 8F5F      		subi r24,lo8(-(1))
 1085 03a8 8093 0000 		sts i2cerror,r24
 1086 03ac 00C0      		rjmp .L118
 1087               	.L102:
 1088 03ae 8FEF      		ldi r24,lo8(-1)
 1089               	.L182:
 1090 03b0 8093 BB00 		sts 187,r24
 1091               	.L118:
 1092 03b4 8091 0000 		lds r24,buffer_address
 1093 03b8 8F5F      		subi r24,lo8(-(1))
 1094 03ba 8093 0000 		sts buffer_address,r24
 1095 03be 00C0      		rjmp .L56
 1096               	.L59:
 1097 03c0 85ED      		ldi r24,lo8(-43)
 1098 03c2 00C0      		rjmp .L187
 1099               	.L56:
 1100 03c4 85EC      		ldi r24,lo8(-59)
 1101               	.L187:
 1102 03c6 8093 BC00 		sts 188,r24
 1103               	.L55:
 1104               	/* epilogue start */
 1105 03ca FF91      		pop r31
 1106 03cc EF91      		pop r30
 1107 03ce BF91      		pop r27
 1108 03d0 AF91      		pop r26
 1109 03d2 9F91      		pop r25
 1110 03d4 8F91      		pop r24
 1111 03d6 7F91      		pop r23
 1112 03d8 6F91      		pop r22
 1113 03da 5F91      		pop r21
 1114 03dc 4F91      		pop r20
 1115 03de 3F91      		pop r19
 1116 03e0 2F91      		pop r18
 1117 03e2 0F90      		pop r0
 1118 03e4 0FBE      		out __SREG__,r0
 1119 03e6 0F90      		pop r0
 1120 03e8 1F90      		pop r1
 1121 03ea 1895      		reti
 1123               		.section	.text.start_bootloader,"ax",@progbits
 1124               	.global	start_bootloader
 1126               	start_bootloader:
 1127               	/* prologue: function */
 1128               	/* frame size = 0 */
 1129               	/* stack size = 0 */
 1130               	.L__stack_usage = 0
 1131               	/* #APP */
 1132               	 ;  522 "CUL.c" 1
 1133 0000 F894      		cli
 1134               	 ;  0 "" 2
 1135               	/* #NOAPP */
 1136 0002 81E0      		ldi r24,lo8(1)
 1137 0004 85BF      		out 0x35,r24
 1138 0006 82E0      		ldi r24,lo8(2)
 1139 0008 85BF      		out 0x35,r24
 1140 000a E0E0      		ldi r30,0
 1141 000c F8E3      		ldi r31,lo8(56)
 1142 000e 0995      		icall
 1143 0010 0895      		ret
 1145               	.global	__floatunsisf
 1146               	.global	__mulsf3
 1147               	.global	__fixunssfsi
 1148               		.section	.text.startup.main,"ax",@progbits
 1149               	.global	main
 1151               	main:
 1152               	/* prologue: function */
 1153               	/* frame size = 0 */
 1154               	/* stack size = 0 */
 1155               	.L__stack_usage = 0
 1156 0000 9FE0      		ldi r25,lo8(15)
 1157 0002 88E1      		ldi r24,lo8(24)
 1158               	/* #APP */
 1159               	 ;  473 "/usr/lib/avr/include/avr/wdt.h" 1
 1160 0004 0FB6      		in __tmp_reg__,__SREG__
 1161 0006 F894      		cli
 1162 0008 A895      		wdr
 1163 000a 8093 6000 		sts 96, r24
 1164 000e 0FBE      		out __SREG__,__tmp_reg__
 1165 0010 9093 6000 		sts 96, r25
 1166               	 	
 1167               	 ;  0 "" 2
 1168               	/* #NOAPP */
 1169 0014 90E0      		ldi r25,0
 1170 0016 80E8      		ldi r24,lo8(-128)
 1171               	/* #APP */
 1172               	 ;  1512 "/usr/lib/avr/include/avr/power.h" 1
 1173 0018 0FB6      		in __tmp_reg__,__SREG__
 1174 001a F894      		cli
 1175 001c 8093 6100 		sts 97, r24
 1176 0020 9093 6100 		sts 97, r25
 1177 0024 0FBE      		out __SREG__, __tmp_reg__
 1178               	 ;  0 "" 2
 1179               	/* #NOAPP */
 1180 0026 04B6      		in __tmp_reg__,0x34
 1181 0028 03FE      		sbrs __tmp_reg__,3
 1182 002a 00C0      		rjmp .L200
 1183 002c 83E3      		ldi r24,lo8(51)
 1184 002e 90E0      		ldi r25,0
 1185 0030 0E94 0000 		call erb
 1186 0034 8823      		tst r24
 1187 0036 01F0      		breq .L200
 1188 0038 60E0      		ldi r22,0
 1189 003a 83E3      		ldi r24,lo8(51)
 1190 003c 90E0      		ldi r25,0
 1191 003e 0E94 0000 		call ewb
 1192 0042 0E94 0000 		call start_bootloader
 1193               	.L200:
 1194 0046 1092 8000 		sts 128,__zero_reg__
 1195 004a 8AE0      		ldi r24,lo8(10)
 1196 004c 8093 8100 		sts 129,r24
 1197 0050 84B7      		in r24,0x34
 1198 0052 877F      		andi r24,lo8(-9)
 1199 0054 84BF      		out 0x34,r24
 1200 0056 10BA      		out 0x10,__zero_reg__
 1201 0058 88E7      		ldi r24,lo8(120)
 1202 005a 8AB9      		out 0xa,r24
 1203 005c 1DB8      		out 0xd,__zero_reg__
 1204 005e 87EF      		ldi r24,lo8(-9)
 1205 0060 84B9      		out 0x4,r24
 1206 0062 2898      		cbi 0x5,0
 1207 0064 80EC      		ldi r24,lo8(-64)
 1208 0066 87B9      		out 0x7,r24
 1209 0068 8EEB      		ldi r24,lo8(-66)
 1210 006a 87BD      		out 0x27,r24
 1211 006c C1E0      		ldi r28,lo8(1)
 1212 006e C5BD      		out 0x25,r28
 1213 0070 81E8      		ldi r24,lo8(-127)
 1214 0072 84BD      		out 0x24,r24
 1215 0074 8091 6E00 		lds r24,110
 1216 0078 8160      		ori r24,lo8(1)
 1217 007a 8093 6E00 		sts 110,r24
 1218 007e 8AE2      		ldi r24,lo8(42)
 1219 0080 0E94 0000 		call I2C_init
 1220 0084 8091 6800 		lds r24,104
 1221 0088 8160      		ori r24,lo8(1)
 1222 008a 8093 6800 		sts 104,r24
 1223 008e 8091 6B00 		lds r24,107
 1224 0092 8160      		ori r24,lo8(1)
 1225 0094 8093 6B00 		sts 107,r24
 1226               	/* #APP */
 1227               	 ;  570 "CUL.c" 1
 1228 0098 7894      		sei
 1229               	 ;  0 "" 2
 1230               	/* #NOAPP */
 1231 009a 8FEF      		ldi r24,lo8(-1)
 1232 009c 8093 0000 		sts led+1,r24
 1233 00a0 8093 0000 		sts led,r24
 1234 00a4 8093 0000 		sts led+2,r24
 1235 00a8 61E0      		ldi r22,lo8(1)
 1236 00aa 70E0      		ldi r23,0
 1237 00ac 80E0      		ldi r24,lo8(led)
 1238 00ae 90E0      		ldi r25,hi8(led)
 1239 00b0 0E94 0000 		call ws2812_setleds
 1240 00b4 0E94 0000 		call setup_lcd
 1241 00b8 0E94 0000 		call initbl
 1242 00bc 1092 0000 		sts led+1,__zero_reg__
 1243 00c0 1092 0000 		sts led,__zero_reg__
 1244 00c4 1092 0000 		sts led+2,__zero_reg__
 1245 00c8 61E0      		ldi r22,lo8(1)
 1246 00ca 70E0      		ldi r23,0
 1247 00cc 80E0      		ldi r24,lo8(led)
 1248 00ce 90E0      		ldi r25,hi8(led)
 1249 00d0 0E94 0000 		call ws2812_setleds
 1250 00d4 87ED      		ldi r24,lo8(-41)
 1251 00d6 87BD      		out 0x27,r24
 1252 00d8 0E94 0000 		call spi_init
 1253 00dc 0E94 0000 		call eeprom_init
 1254 00e0 0E94 0000 		call USB_Init
 1255 00e4 0E94 0000 		call fht_init
 1256 00e8 0E94 0000 		call tx_init
 1257 00ec 80E0      		ldi r24,lo8(gs(analyze_ttydata))
 1258 00ee 90E0      		ldi r25,hi8(gs(analyze_ttydata))
 1259 00f0 9093 0000 		sts input_handle_func+1,r25
 1260 00f4 8093 0000 		sts input_handle_func,r24
 1261 00f8 C093 0000 		sts display_channel,r28
 1262 00fc 10E0      		ldi r17,0
 1263 00fe 0FE0      		ldi r16,lo8(15)
 1264 0100 31ED      		ldi r19,lo8(-47)
 1265 0102 F32E      		mov r15,r19
 1266 0104 C0E0      		ldi r28,0
 1267 0106 D4E0      		ldi r29,lo8(4)
 1268               	.L224:
 1269 0108 8091 0000 		lds r24,isrtimer
 1270 010c 9091 0000 		lds r25,isrtimer+1
 1271 0110 8532      		cpi r24,37
 1272 0112 944F      		sbci r25,-12
 1273 0114 00F0      		brlo .L203
 1274 0116 2091 0000 		lds r18,fanspin
 1275 011a 3091 0000 		lds r19,fanspin+1
 1276 011e 029F      		mul r16,r18
 1277 0120 C001      		movw r24,r0
 1278 0122 039F      		mul r16,r19
 1279 0124 900D      		add r25,r0
 1280 0126 1124      		clr __zero_reg__
 1281 0128 9093 0000 		sts rpm+1,r25
 1282 012c 8093 0000 		sts rpm,r24
 1283 0130 1092 0000 		sts fanspin+1,__zero_reg__
 1284 0134 1092 0000 		sts fanspin,__zero_reg__
 1285 0138 1092 0000 		sts isrtimer+1,__zero_reg__
 1286 013c 1092 0000 		sts isrtimer,__zero_reg__
 1287 0140 2091 0000 		lds r18,fanlevel
 1288 0144 2E3F      		cpi r18,lo8(-2)
 1289 0146 01F4      		brne .L203
 1290 0148 8133      		cpi r24,49
 1291 014a 9141      		sbci r25,17
 1292 014c 00F0      		brlo .L205
 1293 014e 87B5      		in r24,0x27
 1294 0150 8F5F      		subi r24,lo8(-(1))
 1295 0152 87BD      		out 0x27,r24
 1296               	.L205:
 1297 0154 8091 0000 		lds r24,rpm
 1298 0158 9091 0000 		lds r25,rpm+1
 1299 015c 8031      		cpi r24,16
 1300 015e 9E40      		sbci r25,14
 1301 0160 00F4      		brsh .L203
 1302 0162 87B5      		in r24,0x27
 1303 0164 8150      		subi r24,lo8(-(-1))
 1304 0166 87BD      		out 0x27,r24
 1305               	.L203:
 1306 0168 4999      		sbic 0x9,1
 1307 016a 00C0      		rjmp .L206
 1308 016c 8091 0000 		lds r24,i2cerror
 1309 0170 8F5F      		subi r24,lo8(-(1))
 1310 0172 8093 0000 		sts i2cerror,r24
 1311               	.L206:
 1312 0176 8091 0000 		lds r24,i2cerror
 1313 017a 8333      		cpi r24,lo8(51)
 1314 017c 00F0      		brlo .L207
 1315 017e F092 BC00 		sts 188,r15
 1316 0182 8AE2      		ldi r24,lo8(42)
 1317 0184 0E94 0000 		call I2C_init
 1318 0188 1092 0000 		sts i2cerror,__zero_reg__
 1319               	/* #APP */
 1320               	 ;  618 "CUL.c" 1
 1321 018c 7894      		sei
 1322               	 ;  0 "" 2
 1323               	/* #NOAPP */
 1324               	.L207:
 1325 018e 8091 0000 		lds r24,changeled
 1326 0192 8823      		tst r24
 1327 0194 01F0      		breq .L208
 1328 0196 61E0      		ldi r22,lo8(1)
 1329 0198 70E0      		ldi r23,0
 1330 019a 80E0      		ldi r24,lo8(led)
 1331 019c 90E0      		ldi r25,hi8(led)
 1332 019e 0E94 0000 		call ws2812_setleds
 1333 01a2 1092 0000 		sts changeled,__zero_reg__
 1334               	.L208:
 1335 01a6 8091 0000 		lds r24,bllevel
 1336 01aa 9091 0000 		lds r25,newbllevel
 1337 01ae 9817      		cp r25,r24
 1338 01b0 00F4      		brsh .L209
 1339 01b2 8150      		subi r24,lo8(-(-1))
 1340 01b4 8093 0000 		sts bllevel,r24
 1341 01b8 88E5      		ldi r24,lo8(88)
 1342 01ba 0E94 0000 		call writebl
 1343 01be 8091 0000 		lds r24,bllevel
 1344 01c2 8F71      		andi r24,lo8(31)
 1345 01c4 0E94 0000 		call writebl
 1346               	.L209:
 1347 01c8 8091 0000 		lds r24,bllevel
 1348 01cc 9091 0000 		lds r25,newbllevel
 1349 01d0 8917      		cp r24,r25
 1350 01d2 00F4      		brsh .L210
 1351 01d4 8F5F      		subi r24,lo8(-(1))
 1352 01d6 8093 0000 		sts bllevel,r24
 1353 01da 88E5      		ldi r24,lo8(88)
 1354 01dc 0E94 0000 		call writebl
 1355 01e0 8091 0000 		lds r24,bllevel
 1356 01e4 8F71      		andi r24,lo8(31)
 1357 01e6 0E94 0000 		call writebl
 1358               	.L210:
 1359 01ea 1A30      		cpi r17,lo8(10)
 1360 01ec 00F4      		brsh .L211
 1361 01ee 1F5F      		subi r17,lo8(-(1))
 1362 01f0 812F      		mov r24,r17
 1363 01f2 90E0      		ldi r25,0
 1364 01f4 FC01      		movw r30,r24
 1365 01f6 3197      		sbiw r30,1
 1366 01f8 EA30      		cpi r30,10
 1367 01fa F105      		cpc r31,__zero_reg__
 1368 01fc 00F0      		brlo .+2
 1369 01fe 00C0      		rjmp .L212
 1370 0200 E050      		subi r30,lo8(-(gs(.L214)))
 1371 0202 F040      		sbci r31,hi8(-(gs(.L214)))
 1372 0204 0C94 0000 		jmp __tablejump2__
 1373               		.section	.progmem.gcc_sw_table.main,"a",@progbits
 1374               		.p2align	1
 1375               	.L214:
 1376 0000 0000      		.word gs(.L213)
 1377 0002 0000      		.word gs(.L215)
 1378 0004 0000      		.word gs(.L212)
 1379 0006 0000      		.word gs(.L216)
 1380 0008 0000      		.word gs(.L217)
 1381 000a 0000      		.word gs(.L212)
 1382 000c 0000      		.word gs(.L218)
 1383 000e 0000      		.word gs(.L219)
 1384 0010 0000      		.word gs(.L212)
 1385 0012 0000      		.word gs(.L220)
 1386               		.section	.text.startup.main
 1387               	.L211:
 1388 0208 87E0      		ldi r24,lo8(7)
 1389 020a 0E94 0000 		call readAna
 1390 020e 9093 0000 		sts a0+1,r25
 1391 0212 8093 0000 		sts a0,r24
 1392 0216 10E0      		ldi r17,0
 1393 0218 00C0      		rjmp .L221
 1394               	.L213:
 1395 021a 86E0      		ldi r24,lo8(6)
 1396 021c 0E94 0000 		call readAna
 1397 0220 9093 0000 		sts a1+1,r25
 1398 0224 8093 0000 		sts a1,r24
 1399 0228 00C0      		rjmp .L221
 1400               	.L215:
 1401 022a 85E0      		ldi r24,lo8(5)
 1402 022c 0E94 0000 		call readAna
 1403 0230 9093 0000 		sts a2+1,r25
 1404 0234 8093 0000 		sts a2,r24
 1405 0238 00C0      		rjmp .L221
 1406               	.L216:
 1407 023a 84E0      		ldi r24,lo8(4)
 1408 023c 0E94 0000 		call readAna
 1409 0240 9093 0000 		sts a3+1,r25
 1410 0244 8093 0000 		sts a3,r24
 1411 0248 00C0      		rjmp .L221
 1412               	.L217:
 1413 024a 81E0      		ldi r24,lo8(1)
 1414 024c 0E94 0000 		call readAna
 1415 0250 9093 0000 		sts a4+1,r25
 1416 0254 8093 0000 		sts a4,r24
 1417 0258 00C0      		rjmp .L221
 1418               	.L218:
 1419 025a 80E0      		ldi r24,0
 1420 025c 0E94 0000 		call readAna
 1421 0260 9093 0000 		sts a5+1,r25
 1422 0264 8093 0000 		sts a5,r24
 1423 0268 00C0      		rjmp .L221
 1424               	.L219:
 1425 026a 0E94 0000 		call readVcc
 1426 026e 9093 0000 		sts vcc+1,r25
 1427 0272 8093 0000 		sts vcc,r24
 1428 0276 00C0      		rjmp .L221
 1429               	.L220:
 1430 0278 0E94 0000 		call GetTemp
 1431 027c 9093 0000 		sts temp+1,r25
 1432 0280 8093 0000 		sts temp,r24
 1433 0284 00C0      		rjmp .L221
 1434               	.L212:
 1435 0286 8AE0      		ldi r24,lo8(10)
 1436 0288 0E94 0000 		call readAna
 1437 028c 9093 0000 		sts a7+1,r25
 1438 0290 8093 0000 		sts a7,r24
 1439 0294 2091 0000 		lds r18,a7max
 1440 0298 3091 0000 		lds r19,a7max+1
 1441 029c 2817      		cp r18,r24
 1442 029e 3907      		cpc r19,r25
 1443 02a0 00F4      		brsh .L222
 1444 02a2 9093 0000 		sts a7max+1,r25
 1445 02a6 8093 0000 		sts a7max,r24
 1446               	.L222:
 1447 02aa 2091 0000 		lds r18,a7min
 1448 02ae 3091 0000 		lds r19,a7min+1
 1449 02b2 8217      		cp r24,r18
 1450 02b4 9307      		cpc r25,r19
 1451 02b6 00F4      		brsh .L223
 1452 02b8 9093 0000 		sts a7min+1,r25
 1453 02bc 8093 0000 		sts a7min,r24
 1454               	.L223:
 1455 02c0 8091 0000 		lds r24,a7count
 1456 02c4 8F5F      		subi r24,lo8(-(1))
 1457 02c6 8093 0000 		sts a7count,r24
 1458 02ca 8D33      		cpi r24,lo8(61)
 1459 02cc 00F0      		brlo .L221
 1460 02ce 6091 0000 		lds r22,a7max
 1461 02d2 7091 0000 		lds r23,a7max+1
 1462 02d6 8091 0000 		lds r24,a7min
 1463 02da 9091 0000 		lds r25,a7min+1
 1464 02de 860F      		add r24,r22
 1465 02e0 971F      		adc r25,r23
 1466 02e2 9695      		lsr r25
 1467 02e4 8795      		ror r24
 1468 02e6 681B      		sub r22,r24
 1469 02e8 790B      		sbc r23,r25
 1470 02ea 80E0      		ldi r24,0
 1471 02ec 90E0      		ldi r25,0
 1472 02ee 0E94 0000 		call __floatunsisf
 1473 02f2 24EF      		ldi r18,lo8(-12)
 1474 02f4 3DEF      		ldi r19,lo8(-3)
 1475 02f6 44E3      		ldi r20,lo8(52)
 1476 02f8 5FE3      		ldi r21,lo8(63)
 1477 02fa 0E94 0000 		call __mulsf3
 1478 02fe 0E94 0000 		call __fixunssfsi
 1479 0302 7093 0000 		sts a7avg+1,r23
 1480 0306 6093 0000 		sts a7avg,r22
 1481 030a D093 0000 		sts a7min+1,r29
 1482 030e C093 0000 		sts a7min,r28
 1483 0312 1092 0000 		sts a7max+1,__zero_reg__
 1484 0316 1092 0000 		sts a7max,__zero_reg__
 1485 031a 1092 0000 		sts a7count,__zero_reg__
 1486               	.L221:
 1487 031e 0E94 0000 		call USB_USBTask
 1488 0322 0E94 0000 		call CDC_Task
 1489 0326 0E94 0000 		call RfAnalyze_Task
 1490 032a 0E94 0000 		call Minute_Task
 1491 032e 0E94 0000 		call FastRF_Task
 1492 0332 0E94 0000 		call rf_asksin_task
 1493 0336 0E94 0000 		call rf_zwave_task
 1494 033a 00C0      		rjmp .L224
 1496               	.global	fntab
 1497               		.section	.progmem.data,"a",@progbits
 1500               	fntab:
 1501 0000 41        		.byte	65
 1502 0001 0000      		.word	gs(asksin_func)
 1503 0003 42        		.byte	66
 1504 0004 0000      		.word	gs(prepare_boot)
 1505 0006 43        		.byte	67
 1506 0007 0000      		.word	gs(ccreg)
 1507 0009 65        		.byte	101
 1508 000a 0000      		.word	gs(eeprom_factory_reset)
 1509 000c 46        		.byte	70
 1510 000d 0000      		.word	gs(fs20send)
 1511 000f 66        		.byte	102
 1512 0010 0000      		.word	gs(fastrf_func)
 1513 0012 47        		.byte	71
 1514 0013 0000      		.word	gs(rawsend)
 1515 0015 68        		.byte	104
 1516 0016 0000      		.word	gs(hm_send)
 1517 0018 69        		.byte	105
 1518 0019 0000      		.word	gs(it_func)
 1519 001b 4B        		.byte	75
 1520 001c 0000      		.word	gs(ks_send)
 1521 001e 4D        		.byte	77
 1522 001f 0000      		.word	gs(em_send)
 1523 0021 52        		.byte	82
 1524 0022 0000      		.word	gs(read_eeprom)
 1525 0024 54        		.byte	84
 1526 0025 0000      		.word	gs(fhtsend)
 1527 0027 74        		.byte	116
 1528 0028 0000      		.word	gs(gettime)
 1529 002a 56        		.byte	86
 1530 002b 0000      		.word	gs(version)
 1531 002d 57        		.byte	87
 1532 002e 0000      		.word	gs(write_eeprom)
 1533 0030 58        		.byte	88
 1534 0031 0000      		.word	gs(set_txreport)
 1535 0033 78        		.byte	120
 1536 0034 0000      		.word	gs(ccsetpa)
 1537 0036 59        		.byte	89
 1538 0037 0000      		.word	gs(somfy_rts_func)
 1539 0039 7A        		.byte	122
 1540 003a 0000      		.word	gs(zwave_func)
 1541 003c 00        		.byte	0
 1542 003d 0000      		.word	0
 1543               	.global	commands2
 1544               		.data
 1547               	commands2:
 1548 0000 1100      		.word	17
 1549 0002 0000      		.word	0
 1550 0004 0100      		.word	1
 1551 0006 0000      		.word	0
 1552 0008 C100      		.word	193
 1553 000a A801      		.word	424
 1554 000c B101      		.word	433
 1555 000e 4501      		.word	325
 1556 0010 0401      		.word	260
 1557 0012 C500      		.word	197
 1558 0014 8001      		.word	384
 1559 0016 6C01      		.word	364
 1560 0018 C600      		.word	198
 1561 001a BD01      		.word	445
 1562 001c 8401      		.word	388
 1563 001e C700      		.word	199
 1564 0020 BD01      		.word	445
 1565 0022 8401      		.word	388
 1566 0024 BD00      		.word	189
 1567 0026 0201      		.word	258
 1568 0028 1100      		.word	17
 1569 002a 0000      		.word	0
 1570 002c F200      		.word	242
 1571 002e 0001      		.word	256
 1572 0030 0001      		.word	256
 1573 0032 8201      		.word	386
 1574 0034 2600      		.word	38
 1575 0036 0801      		.word	264
 1576 0038 E000      		.word	224
 1577 003a 0001      		.word	256
 1578 003c 0401      		.word	260
 1579 003e 0801      		.word	264
 1580 0040 0B01      		.word	267
 1581 0042 0C01      		.word	268
 1582 0044 1101      		.word	273
 1583 0046 0D01      		.word	269
 1584 0048 0E01      		.word	270
 1585 004a 0001      		.word	256
 1586 004c 0401      		.word	260
 1587 004e 0801      		.word	264
 1588 0050 1301      		.word	275
 1589 0052 1401      		.word	276
 1590 0054 2F01      		.word	303
 1591 0056 2901      		.word	297
 1592 0058 2401      		.word	292
 1593 005a E100      		.word	225
 1594 005c 0001      		.word	256
 1595 005e 0401      		.word	260
 1596 0060 0801      		.word	264
 1597 0062 0B01      		.word	267
 1598 0064 0C01      		.word	268
 1599 0066 1101      		.word	273
 1600 0068 0D01      		.word	269
 1601 006a 0E01      		.word	270
 1602 006c 0001      		.word	256
 1603 006e 0401      		.word	260
 1604 0070 0801      		.word	264
 1605 0072 1301      		.word	275
 1606 0074 1401      		.word	276
 1607 0076 2F01      		.word	303
 1608 0078 2901      		.word	297
 1609 007a 2401      		.word	292
 1610 007c 2600      		.word	38
 1611 007e 0801      		.word	264
 1612 0080 FD00      		.word	253
 1613 0082 0001      		.word	256
 1614 0084 0801      		.word	264
 1615 0086 2900      		.word	41
 1616               	.global	commands
 1619               	commands:
 1620 0088 8000      		.word	128
 1621 008a F801      		.word	504
 1622 008c 4602      		.word	582
 1623 008e 0503      		.word	773
 1624 0090 4004      		.word	1088
 1625 0092 4005      		.word	1344
 1626 0094 4006      		.word	1600
 1627 0096 4007      		.word	1856
 1628 0098 4008      		.word	2112
 1629 009a 4009      		.word	2368
 1630 009c 030A      		.word	2563
 1631               	.global	fanlevel
 1634               	fanlevel:
 1635 009e FE        		.byte	-2
 1636               	.global	i2cbuffer
 1637               		.section .bss
 1640               	i2cbuffer:
 1641 0000 0000      		.zero	2
 1642               		.comm	fanspin,2,1
 1643               		.comm	rpm,2,1
 1644               		.comm	temp,2,1
 1645               		.comm	vcc,2,1
 1646               		.comm	a7min,2,1
 1647               		.comm	a7max,2,1
 1648               		.comm	a7avg,2,1
 1649               		.comm	a7,2,1
 1650               		.comm	a5,2,1
 1651               		.comm	a4,2,1
 1652               		.comm	a3,2,1
 1653               		.comm	a2,2,1
 1654               		.comm	a1,2,1
 1655               		.comm	a0,2,1
 1656               	.global	i2cerror
 1659               	i2cerror:
 1660 0002 00        		.zero	1
 1661               		.comm	crc,1,1
 1662               		.comm	changeled,1,1
 1663               	.global	newbllevel
 1664               		.data
 1667               	newbllevel:
 1668 009f 1F        		.byte	31
 1669               	.global	bllevel
 1672               	bllevel:
 1673 00a0 1F        		.byte	31
 1674               		.comm	count,1,1
 1675               	.global	a7count
 1676               		.section .bss
 1679               	a7count:
 1680 0003 00        		.zero	1
 1681               		.comm	buffer_address,1,1
 1682               		.comm	twdrbuffer,1,1
 1683               	.global	commandbyte
 1684               		.data
 1687               	commandbyte:
 1688 00a1 FF        		.byte	-1
 1689               		.comm	led,3,1
 1690               		.comm	output_flush_func,2,1
 1691               		.comm	input_handle_func,2,1
 1692               		.ident	"GCC: (GNU) 5.4.0"
 1693               	.global __do_copy_data
 1694               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 CUL.c
     /tmp/cckUpzwb.s:2      *ABS*:0000003e __SP_H__
     /tmp/cckUpzwb.s:3      *ABS*:0000003d __SP_L__
     /tmp/cckUpzwb.s:4      *ABS*:0000003f __SREG__
     /tmp/cckUpzwb.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cckUpzwb.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cckUpzwb.s:9      .text._crc8_ccitt_update:00000000 _crc8_ccitt_update
     /tmp/cckUpzwb.s:32     .text.ws2812_sendarray_mask:00000000 ws2812_sendarray_mask
     /tmp/cckUpzwb.s:63     .text.ws2812_sendarray_mask:00000026 loop34
     /tmp/cckUpzwb.s:96     .text.ws2812_setleds_pin:00000000 ws2812_setleds_pin
     /tmp/cckUpzwb.s:118    .text.ws2812_setleds:00000000 ws2812_setleds
     /tmp/cckUpzwb.s:130    .text.ws2812_setleds_rgbw:00000000 ws2812_setleds_rgbw
     /tmp/cckUpzwb.s:152    .text.ws2812_sendarray:00000000 ws2812_sendarray
     /tmp/cckUpzwb.s:164    .text.writebl:00000000 writebl
     /tmp/cckUpzwb.s:239    .text.initbl:00000000 initbl
     /tmp/cckUpzwb.s:275    .text.write:00000000 write
     /tmp/cckUpzwb.s:331    .text.setup_lcd:00000000 setup_lcd
     /tmp/cckUpzwb.s:1619   .data:00000088 commands
     /tmp/cckUpzwb.s:1547   .data:00000000 commands2
     /tmp/cckUpzwb.s:383    .text.readAna:00000000 readAna
     /tmp/cckUpzwb.s:434    .text.readVcc:00000000 readVcc
     /tmp/cckUpzwb.s:486    .text.GetTemp:00000000 GetTemp
     /tmp/cckUpzwb.s:530    .text.freeRam:00000000 freeRam
     /tmp/cckUpzwb.s:561    .text.I2C_init:00000000 I2C_init
                            *COM*:00000001 buffer_address
                            *COM*:00000001 count
     /tmp/cckUpzwb.s:583    .text.__vector_9:00000000 __vector_9
                            *COM*:00000002 fanspin
     /tmp/cckUpzwb.s:615    .text.__vector_36:00000000 __vector_36
     /tmp/cckUpzwb.s:1687   .data:000000a1 commandbyte
                            *COM*:00000001 crc
     /tmp/cckUpzwb.s:1659   .bss:00000002 i2cerror
                            *COM*:00000002 a0
                            *COM*:00000002 a1
                            *COM*:00000002 a2
                            *COM*:00000002 a3
                            *COM*:00000002 a4
                            *COM*:00000002 a5
                            *COM*:00000002 a7
                            *COM*:00000002 rpm
                            *COM*:00000002 vcc
                            *COM*:00000002 temp
                            *COM*:00000002 a7avg
     /tmp/cckUpzwb.s:1640   .bss:00000000 i2cbuffer
                            *COM*:00000001 twdrbuffer
     /tmp/cckUpzwb.s:1667   .data:0000009f newbllevel
     /tmp/cckUpzwb.s:1634   .data:0000009e fanlevel
                            *COM*:00000003 led
                            *COM*:00000001 changeled
     /tmp/cckUpzwb.s:1672   .data:000000a0 bllevel
     /tmp/cckUpzwb.s:1126   .text.start_bootloader:00000000 start_bootloader
     /tmp/cckUpzwb.s:1151   .text.startup.main:00000000 main
                            *COM*:00000002 input_handle_func
                            *COM*:00000002 a7max
                            *COM*:00000002 a7min
     /tmp/cckUpzwb.s:1679   .bss:00000003 a7count
     /tmp/cckUpzwb.s:1500   .progmem.data:00000000 fntab
                            *COM*:00000002 output_flush_func

UNDEFINED SYMBOLS
__divmodsi4
__prologue_saves__
__brkval
__heap_start
__epilogue_restores__
__tablejump2__
__floatunsisf
__mulsf3
__fixunssfsi
erb
ewb
spi_init
eeprom_init
USB_Init
fht_init
tx_init
analyze_ttydata
display_channel
isrtimer
USB_USBTask
CDC_Task
RfAnalyze_Task
Minute_Task
FastRF_Task
rf_asksin_task
rf_zwave_task
asksin_func
prepare_boot
ccreg
eeprom_factory_reset
fs20send
fastrf_func
rawsend
hm_send
it_func
ks_send
em_send
read_eeprom
fhtsend
gettime
version
write_eeprom
set_txreport
ccsetpa
somfy_rts_func
zwave_func
__do_copy_data
__do_clear_bss
